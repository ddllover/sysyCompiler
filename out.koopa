decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

fun @f1d(%0: *i32) {
%entry:
  @arr_0= alloc *i32
  store %0, @arr_0

  @i_1= alloc i32
  store 0, @i_1

  jump %while_entry_1

%while_entry_1:
  %1 = load @i_1
  %2 = lt %1, 10
  br %2, %while_body_1, %while_end_1

%while_body_1:
  %3 = load @i_1
  %4 = load @arr_0
  %5 = getptr %4, %3
  %6 = load @i_1
  store %6, %5
  %7 = load @i_1
  %8 = add %7, 1
  store %8, @i_1

  jump %while_entry_1

%while_end_1:
  ret
}

fun @f2d(%0: *[i32,10]) {
%entry:
  @arr_0= alloc *[i32,10]
  store %0, @arr_0

  %1 = load @arr_0
  %2 = getptr %1, 1
  %3 = getelemptr %2, 2
  store 3, %3
  @i_1= alloc i32
  store 0, @i_1

  jump %while_entry_1

%while_entry_1:
  %4 = load @i_1
  %5 = lt %4, 10
  br %5, %while_body_1, %while_end_1

%while_body_1:
  %6 = load @i_1
  %7 = load @arr_0
  %8 = getptr %7, %6
  call @f1d(%9)
  %10 = load @i_1
  %11 = add %10, 1
  store %11, @i_1

  jump %while_entry_1

%while_end_1:
  ret
}

fun @main():i32 {
%entry:
  ret 33

}

